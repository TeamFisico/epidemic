#to be tested with multiple versions
cmake_minimum_required(VERSION 3.16)
project(epidemic
        VERSION 1.0
        DESCRIPTION "SIR model for an epidemic"
        LANGUAGES CXX)


##Prevent the mess generated by an in-source build
file(TO_CMAKE_PATH "${PROJECT_BINARY_DIR}/CMakeLists.txt" LOC_PATH)
if(EXISTS "${LOC_PATH}")
    message(FATAL_ERROR "You cannot build in a source directory (or any directory with "
            "CMakeLists.txt file). Please make a build subdirectory. Feel free to "
            "remove CMakeCache.txt and CMakeFiles.")
endif()

#do the following if this is the main project
#this project -->can be included as a subdirectory
if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)

    set(CMAKE_CXX_STANDARD 17)
    set(CXX_STANDARD_REQUIRED ON)
    set(CXX_EXTENSIONS OFF)
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")
    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
    set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")

    configure_file(epidemicConfig.h.in epidemicConfig.h)


    #support IDE to show all the folders
    set_property(GLOBAL PROPERTY USE_FOLDERS ON)

    ################ TESTING HERE #############

    #doxygen for documentation generation(LaTeX)
#    find_package(Doxygen)
#    if(Doxygen_FOUND)
#        add_subdirectory(docs)
#    else()
#        message(STATUS "Doxygen not found, not building docs")
#    endif()

endif()

find_package(SFML 2.5 COMPONENTS system window graphics network audio)

if(SFML_FOUND)
    message(STATUS "SFML package found")
endif()

find_package(ROOT 6.16 CONFIG REQUIRED)
if(ROOT_FOUND)
    message(STATUS "ROOT package found")
endif()

# Get the generate dictionary command from ROOT
if(ROOT_VERSION VERSION_LESS 6.20)
    include("${ROOT_DIR}/modules/RootNewMacros.cmake")
else()
    include("${ROOT_DIR}/RootMacros.cmake")
endif()


# The compiled library code is here
add_subdirectory(src)

# The executable code is here
add_subdirectory(apps)

# Testing only available if this is the main app
if(BUILD_TESTING)
    add_subdirectory(tests)
endif()

